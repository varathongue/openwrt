name: Build wrt1900acv2

on: workflow_dispatch

jobs:

    build-wrt1900acv2:
        name: build wrt1900acv2 image
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
               ref: 'v22.03.5'
            - name: Add repos
              run: |
                cat << "EOF" >> feeds.conf.default
                src-git-full passwall https://github.com/xiaorouji/openwrt-passwall.git
                src-git-full passwall2 https://github.com/xiaorouji/openwrt-passwall2.git
                EOF
            - name: Update and install packages
              run: sudo apt update && sudo apt install qemu-utils libelf-dev -y        
            - name: Update and install feeds
              run: |
                ./scripts/feeds update -a && ./scripts/feeds update -a
                ./scripts/feeds install -a && ./scripts/feeds install -a 
            - name: Import full config for wrt1900acv2
              run: |
                curl -LJ https://raw.githubusercontent.com/varathongue/openwrt/openwrt-22.03/ir-geosite --output feeds/packages/net/v2ray-geodata/Makefile
                curl -LJ https://raw.githubusercontent.com/varathongue/openwrt/openwrt-22.03/.config_1900acv2 --output .config
                ./scripts/feeds install -a && ./scripts/feeds install -a
                make defconfig
            - name: fixes on default config
              run: |
                cat << "EOF" > package/base-files/files/etc/banner
                t.me/
                .___                     __      _______________________
                |   |___________    ____/  \    /  \______   \__    ___/
                |   \_  __ \__  \  /    \   \/\/   /|       _/ |    |   
                |   ||  | \// __ \|   |  \        / |    |   \ |    |   
                |___||__|  (____  /___|  /\__/\  /  |____|_  / |____|   
                WireLess FREEDOM\/     \/      \/          \/          
                -----------------------------------------------------
                 %D %V, %C
                -----------------------------------------------------
                EOF
                cat << "EOF" > package/base-files/files/etc/uci-defaults/20_wifi_config
                uci set wireless.@wifi-device[0].disabled="0"
                uci set wireless.@wifi-iface[0].disabled="0"
                uci set wireless.@wifi-iface[0].ssid="OpenWrt"
                uci set wireless.@wifi-iface[0].key="Openwrt_Persian"
                uci set wireless.@wifi-iface[0].encryption="psk2"
                uci commit wireless
                EOF
                cat << "EOF" > package/base-files/files/etc/uci-defaults/22_lan_config
                uci set network.lan.ipaddr=192.168.22.1
                uci commit network
                EOF
                sed -i "s/China/Iran/g" feeds/passwall2/luci-app-passwall2/root/usr/share/passwall2/0_default_config
                sed -i "s/geoip:cn/geoip:ir/g" feeds/passwall2/luci-app-passwall2/root/usr/share/passwall2/0_default_config
                sed -i "s/geosite:cn/geosite:category-ir^M\next:iran.dat:ir/g" feeds/passwall2/luci-app-passwall2/root/usr/share/passwall2/0_default_config
            - name: Download package sources
              run: make download V=s

            - name: Build tools
              run: |
                make -j$(nproc) || \
                make -j$(nproc) || \
                make V=s
                
            - name: Checksum Trim
              run: grep -i sysupgrade bin/targets/mvebu/cortexa9/sha256sums >bin/targets/mvebu/cortexa9/sysupgrade.checksum
              
            - name: TAR output
              run: tar -cvf wrt1900acv2-images.tar bin/targets/mvebu/cortexa9/*sysupgrade*

            - name: Upload artifacts
              uses: actions/upload-artifact@v3
              with:
                name: wrt1900acv2-images
                path: wrt1900acv2-images.tar
    release:
          name: Make a release
          runs-on: ubuntu-latest
          needs: [build-wrt1900acv2]

          steps:
            - name: Download the wrt1900acv2 image artifacts
              uses: actions/download-artifact@v3
              with:
                name: wrt1900acv2-images
                
            - name: Extract the image artifacts
              run: tar xf wrt1900acv2-images.tar --strip-components=4
              
            - name: Add checksum to list
              run: cat sysupgrade.checksum >> openwrt.sha256sum

            - name: Get the current date
              run: echo "NOW=$(date +%F-%H%M)" >> $GITHUB_ENV

            - name: Create a release
              uses: "ncipollo/release-action@v1"
              with:
                name: "Updated prebuilt images for wrt1900acv2 ${{ env.NOW }}"
                commit: "master"
                tag: "wrt1900acv2-${{ env.NOW }}"
                generateReleaseNotes: true
                makeLatest: true
                artifacts: openwrt*
                token: "${{ secrets.GITHUB_TOKEN }}"
